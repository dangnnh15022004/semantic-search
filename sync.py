import os
import uuid
import pandas as pd
import psycopg2
from pinecone import Pinecone
from config import POSTGRES_URL, PINECONE_API_KEY, PINECONE_INDEX
from tqdm import tqdm

# === Load styles.csv ƒë·ªÉ l·∫•y danh s√°ch ID ===
df = pd.read_csv("styles.csv", on_bad_lines="skip")
df = df[['id']].dropna()
df = df.astype(str)

# === K·∫øt n·ªëi Pinecone ===
pc = Pinecone(api_key=PINECONE_API_KEY)
index = pc.Index(PINECONE_INDEX)

# === K·∫øt n·ªëi PostgreSQL ===
conn = psycopg2.connect(POSTGRES_URL)
cursor = conn.cursor()

# === L·∫∑p qua danh s√°ch ID v√† insert metadata v√†o PostgreSQL ===
print("üîÑ ƒêang ƒë·ªìng b·ªô metadata t·ª´ Pinecone v√†o PostgreSQL...")
inserted = 0
skipped = 0
errors = 0

for vector_id in tqdm(df["id"], desc="üîÅ Syncing", unit="vector"):
    try:
        record = index.fetch(ids=[vector_id]).vectors.get(vector_id)
        if not record:
            skipped += 1
            print(f"‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y vector {vector_id}")
            continue

        metadata = record.metadata
        cursor.execute("""
            INSERT INTO products (id, product_display_name, gender, article_type, base_colour, season, usage, pinecone_id)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
            ON CONFLICT (id) DO NOTHING
        """, (
            str(uuid.uuid4()),
            metadata.get("productDisplayName"),
            metadata.get("gender"),
            metadata.get("category"),
            metadata.get("colour"),
            metadata.get("season"),
            metadata.get("usage"),
            vector_id
        ))
        inserted += 1
    except Exception as e:
        errors += 1
        print(f"‚ùå L·ªói khi insert {vector_id}: {e}")

# === Ho√†n t·∫•t ===
conn.commit()
cursor.close()
conn.close()

print(f"\n‚úÖ Ho√†n t·∫•t!")
print(f"   ‚úÖ ƒê√£ th√™m: {inserted}")
print(f"   ‚ö†Ô∏è  B·ªè qua (kh√¥ng t√¨m th·∫•y vector): {skipped}")
print(f"   ‚ùå L·ªói khi insert: {errors}")